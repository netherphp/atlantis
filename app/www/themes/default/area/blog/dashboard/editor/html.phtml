<?php

use Nether\Atlantis;
use Nether\Avenue;
use Nether\Blog;
use Nether\Common;
use Nether\Surface;
use Nether\User;

/**
 * @var Atlantis\Engine $App
 * @var Atlantis\Struct\TemplateHelper $Util
 * @var Avenue\Router $Router
 * @var Surface\Engine $Surface
 * @var User\EntitySession $User
 *
 * @var Atlantis\PublicWeb $Route
 * @var ?Blog\Post $Post
 */

?>

<div class="BlogPostEditor">
	<form id="BlogPostEditor" data-editor="html" data-post-id="<?php $Printer($Post ? $Post->ID : 'null') ?>">

		<!-- BLOG SELECTOR -->
		<div class="<?php $Util->Print($Blogs->Count() === 1 ? 'd-none' : '') ?> mb-4">
			<div class="fw-bold text-uppercase">Blog</div>
			<div>
				<select name="BlogID" class="form-select">
					<?php foreach($Blogs as $Blog): ?>
					<option value="<?php $Printer($Blog->ID) ?>" <?php echo $Selected($Blog->ID === $Route->Data->ID) ?>><?php $Printer($Blog->Title) ?></option>
					<?php endforeach; ?>
				</select>
			</div>
		</div>

		<!-- TITLE AND IMAGE -->
		<div class="row mb-6">
			<div class="col-12 col-md mb-4 mb-md-0">
				<div class="mb-4">
					<div class="fw-bold text-uppercase">Post Title</div>

					<div class="mb-2">
						<input type="date" name="DateCreated" pattern="\d{4}-\d{2}-\d{2}" class="form-control" value="<?php $Printer($Post ? $Post->DateCreated->Get('Y-m-d') : '') ?>" />
					</div>

					<?php if($Post->TimeCreated !== $Post->TimeSorted): ?>
					(Sort Date: <?php $Util->Print($Post->DateSorted->Get(Common\Values::DateFormatFancyDate)) ?>)
					<?php endif; ?>

				</div>
				<div class="mb-0">
					<div class="fw-bold text-uppercase">Post Visibility</div>
					<select name="Enabled" class="form-select">
						<option value="0" <?php $Util->Print($Util->GetSelectedHTML($Post && $Post->Enabled === 0)) ?>>Draft: Only Admins Can See</option>
						<option value="1" <?php $Util->Print($Util->GetSelectedHTML($Post && $Post->Enabled === 1)) ?>>Published</option>
					</select>
				</div>
			</div>
			<div class="col-12 col-md-3 mb-0 mb-md-0">
				<div class="fw-bold text-uppercase">Post Photo</div>
					<div id="BlogPostCoverImage" class="ratiobox widescreen wallpapered rounded bg-light mb-2" data-id="<?php $Util->Print($Post && $Post->CoverImageID ? $Post->CoverImageID : 0) ?>" style="background-image:url(<?php $Util->Print($Post && $Post->CoverImageID ? $Post->GetCoverImageURL() : '/share/gfx/misc/no-image.png') ?>);"></div>

					<button type="button" class="CmdPhotoUpload btn btn-secondary btn-block text-align-left">
						<i class="mdi mdi-upload"></i> Upload...
					</button>
				</div>
			</div>
		</div>

		<!-- POST CONTENT -->
		<div class="mb-6">
			<div class="fw-bold text-uppercase">Content</div>
			<div id="EditorContent" class="Editor d-none"><?php echo $Post ? $Post->Content : '' ?></div>
		</div>

		<!-- --- --->
		<div class="mb-0">
			<button type="submit" class="btn btn-primary">
				<i class="mdi mdi-fw mdi-content-save"></i>
				Save
			</button>
		</div>

	</form>
</div>

<script type="module">
import API from '/share/nui/api/json.js';
import FormUtil from '/share/nui/util/form.js';
import Editor from '/share/nui/modules/editor/editor.js';
import UploadButton from '/share/nui/modules/uploader/uploader.js';

jQuery(function(){

	let editor = jQuery('#BlogPostEditor');
	let cover = jQuery('#BlogPostCoverImage');
	let content = new Editor('#EditorContent');

	let pid = editor.attr('data-post-id');

	////////

	new UploadButton('.CmdPhotoUpload', {
		'title': 'Upload Photo...',
		'dataset': { 'ID': pid, 'Type': 'posthead' },
		'onSuccess': function(result) {
			cover
			.css('background-image', `url(${result.payload.URL})`)
			.attr('data-id', result.payload.ID);

			this.destroy();
			return;
		}
	});

	////////

	editor
	.on('submit', function() {

		let that = jQuery(this);
		let api = new API.Request('POST', '/api/blog/post');
		let form = new FormUtil(this);

		(form.read())
		.set('Editor', 'html')
		.set('CoverImageID', cover.attr('data-id'))
		.set('Content', content.getContent());

		if(pid !== 'null') {
			api.setMethod('PATCH');
			form.set('ID', pid);
		}

		(api.send(form))
		.then(api.goto)
		.catch(api.catch);

		return false;
	});

	return;
});
</script>
