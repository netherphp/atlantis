<?php

use Nether\Atlantis;
use Nether\Common;
use Nether\Console;
use Nether\Storage;
use Nether\User;

(function(){
	require(sprintf('%s/autoload.php', dirname(__DIR__, 3)));
	return;
})();

////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////

class DevTool
extends Console\Client {

	const
	AppName    = 'Nether Dev Tools',
	AppDesc    = 'Mostly cheat tools for working on the framework.',
	AppVersion = '5.0.0-dev',
	AppDebug   = TRUE;

	protected Atlantis\Engine
	$App;

	////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////

	protected function
	OnReady():
	void {

		$this->App = new Atlantis\Engine(
			Atlantis\Util::GetBinProjectDirectory(__FILE__)
		);

		return;
	}

	////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////

	#[Console\Meta\Command('status')]
	#[Console\Meta\Info('Run GIT STATUS on all Nether source repos within vendor dir, because inquiring minds got to know.')]
	#[Console\Meta\Toggle('--verbose', 'Show more info.')]
	public function
	NetherGitStatus():
	int {

		$Verbose = (bool)$this->GetOption('--verbose');
		$Found = $this->FindNetherVendorDirs();

		$Dir = NULL;
		$Git = NULL;
		$Result = NULL;

		foreach($Found as $Dir) {
			$Git = sprintf(
				'git -C "%s" status --porcelain 2>&1',
				Nether\Atlantis\Util::Repath("{$Dir}")
			);

			$Result = $this->ExecuteCommandLine($Git, TRUE);

			if(count($Result->Output)) {
				$this->PrintLn($this->FormatPrimary("[{$Dir}]"));

				if($Verbose)
				$this->PrintLn($this->FormatSecondary($Git));

				echo PHP_EOL, join(PHP_EOL, $Result->Output);
				echo PHP_EOL, PHP_EOL;
			}
		}

		return 0;
	}

	#[Console\Meta\Command('shove')]
	#[Console\Meta\Info('Run GIT PUSH on all Nether source repos within vendor dir. Been working really hard and wanna publish these updates. Not like you kept a verbose change list anyway.')]
	#[Console\Meta\Toggle('--verbose', 'Show more info.')]
	#[Console\Meta\Value('--msg', 'Commit message.')]
	public function
	NetherGitShove():
	int {

		$Verbose = (bool)$this->GetOption('verbose');
		$Found = $this->FindNetherVendorDirs();
		$DoAll = $this->GetOption('all');
		$CommitMsg = $this->GetOption('msg') ?? 'thusfar';

		$Dir = NULL;
		$Git = NULL;
		$Result = NULL;
		$Output = NULL;

		foreach($Found as $Dir) {
			$Git = sprintf(
				'git -C "%1$s" add . 2>&1 && git -C "%1$s" commit -m %2$s 2>&1 && git -C "%1$s" push 2>&1',
				Nether\Atlantis\Util::Repath("{$Dir}"),
				escapeshellarg($CommitMsg)
			);

			$Result = $this->ExecuteCommandLine($Git, TRUE);

			if(count($Result->Output)) {
				$Output = join(PHP_EOL, $Result->Output);

				if(str_contains($Output, 'Your branch is up to date'))
				continue;

				if(str_contains($Output, 'HEAD detached from'))
				continue;

				$this->PrintLn($this->FormatPrimary("[{$Dir}]"));

				if($Verbose)
				$this->PrintLn($this->FormatSecondary($Git));

				echo PHP_EOL, $Output;
				echo PHP_EOL, PHP_EOL;
			}
		}

		return 0;
	}

	#[Console\Meta\Command('yoink')]
	#[Console\Meta\Info('Run GIT PULL on all Nether source repos within vendor dir. It is typically better to do a composer update, instead.')]
	#[Console\Meta\Toggle('--verbose', 'Show more info.')]
	public function
	NetherGitYoink():
	int {

		$Verbose = (bool)$this->GetOption('--verbose');
		$Found = $this->FindNetherVendorDirs();
		$DoAll = $this->GetOption('all');

		$Dir = NULL;
		$Git = NULL;
		$Result = NULL;

		foreach($Found as $Dir) {
			$Git = sprintf(
				'git -C "%1$s" pull 2>&1',
				Nether\Atlantis\Util::Repath("{$Dir}")
			);

			$Result = $this->ExecuteCommandLine($Git, TRUE);

			if(count($Result->Output)) {
				$this->PrintLn($this->FormatPrimary("[{$Dir}]"));

				if($Verbose)
				$this->PrintLn($this->FormatSecondary($Git));

				echo PHP_EOL, join(PHP_EOL, $Result->Output);
				echo PHP_EOL, PHP_EOL;
			}
		}

		return 0;
	}

	#[Console\Meta\Command('config')]
	#[Console\Meta\Info('Run GIT CONFIG on all Nether source repos within vendor dir. Usually to force local settings after the default system ones have been annoying.')]
	#[Console\Meta\Toggle('--verbose', 'Show more info.')]
	#[Console\Meta\Toggle('--global', 'Set these things globally for your user instead of local to this project.')]
	public function
	NetherGitConfig():
	int {

		$Verbose = (bool)$this->GetOption('Verbose');
		$Global = $this->GetOption('Global');
		$Found = $this->FindNetherVendorDirs();

		$GitCommandsToRun = [
			'config core.filemode 0',
			'config core.pager ""',
			'config tag.sort version:refname'
		];

		$Dir = NULL;
		$Git = NULL;
		$GitCmd = NULL;
		$Result = NULL;

		foreach($Found as $Dir) {
			foreach($GitCommandsToRun as $GitCmd) {
				$Git = match($Global) {
					TRUE => sprintf(
						'git %1$s 2>&1',
						str_replace('config ', 'config --global ', $GitCmd)
					),
					default => sprintf(
						'git -C "%1$s" %2$s 2>&1',
						Nether\Atlantis\Util::Repath("{$Dir}"),
						$GitCmd
					)
				};

				$Result = $this->ExecuteCommandLine($Git);

				if(count($Result->Output)) {
					$this->PrintLn($this->FormatPrimary("[{$Dir}]"));

					if($Verbose)
					$this->PrintLn($this->FormatSecondary($Git));

					echo PHP_EOL, join(PHP_EOL, $Result->Output);
					echo PHP_EOL, PHP_EOL;
				}
			}

			if($Global)
			break;
		}


		return 0;
	}

	////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////

	#[Common\Meta\Date('2023-07-14')]
	protected function
	FindNetherVendorDirs():
	Common\Datastore {

		$Path = Common\Filesystem\Util::Pathify(
			getcwd(), 'vendor', 'netherphp', '*'
		);

		$Found = new Common\Datastore(glob($Path));
		$Found->Filter(function(string $Filename) use($Path): bool {
			$DotGit = Common\Filesystem\Util::Pathify(
				$Filename, '.git'
			);

			return is_dir($DotGit);
		});

		return $Found;
	}

	#[Common\Meta\Date('2022-11-23')]
	protected function
	ComposerDumpAutoload():
	static {

		$Result = $this->ExecuteCommandLine('composer dump-autoload');

		$this->PrintLn('Composer said:');
		$Result->Print('> ');

		return $this;
	}

}

exit((new DevTool)->Run());
