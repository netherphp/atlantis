<?php

use Nether\Console\Meta as MetaCLI;

(function(){

	require(sprintf(
		'%s/autoload.php',
		dirname(__DIR__, 3)
	));

	return;
})();

class Atlantis
extends Nether\Console\Client {

	#[MetaCLI\Subcommand]
	#[MetaCLI\Info('Setup the current working directory as a fresh project.')]
	public function
	HandleInit():
	int {

		static::Message('Setup Git Ignore...');
		$this->HandleInitGitIgnore();

		static::Message('Setup Common Directories...');
		$this->HandleInitCommonDirs();

		static::Message('Setup Common Files...');
		$this->HandleInitCommonFiles();

		static::Message('Done.');

		return 0;
	}

	#[MetaCLI\Subcommand]
	#[MetaCLI\Info('Add things this framework knows you need to .gitignore')]
	public function
	HandleInitGitIgnore():
	int {

		$CWD = getcwd();
		$IgnoreFile = "{$CWD}/.gitignore";
		$IgnoreList = [
			'/env.lock',
			'/vendor',
			'/www/themes/default'
		];

		Nether\Atlantis\Util::WriteToGitIgnore(
			$IgnoreList,
			$IgnoreFile
		);

		return 0;
	}

	#[MetaCLI\Subcommand]
	#[MetaCLI\Info('Build up the common directory structure.')]
	#[MetaCLI\Error(1, 'unable to create directory: file exists')]
	public function
	HandleInitCommonDirs():
	int {

		$CWD = getcwd();
		$Dir = NULL;
		$Path = NULL;

		$Dirs = [
			'conf', 'core', 'data', 'routes',
			'www', 'www/themes'
		];

		foreach($Dirs as $Dir) {
			$Path = "{$CWD}/{$Dir}";
			static::Message(" * {$Path}");

			// if already a directory this is fine.

			if(is_dir($Path))
			continue;

			// if is a file this is not fine.

			if(file_exists($Path))
			$this->EndofLine(1);

			// make the path.

			Nether\Atlantis\Util::MkDir($Path);
		}

		return 0;
	}

	#[MetaCLI\Subcommand]
	#[MetaCLI\Info('Copy in core files for reference by local app.')]
	#[MetaCLI\SubcommandOption('-y', FALSE, 'Say yes to everything. This WILL OVERWRITE core files with stock versions!')]
	#[MetaCLI\Error(1, 'failed to copy file')]
	public function
	HandleInitCommonFiles():
	int {

		$Force = $this->GetOption('y');
		$CWD = getcwd();
		$Root = dirname(__FILE__, 2);
		$File = NULL;
		$Local = NULL;
		$Remote = NULL;
		$Confirm = NULL;

		$Files = [
			'env.lock',
			'conf/start.php',
			'conf/config.json',
			'conf/env/dev',
			'routes/Home.php',
			'www/index.php',
			'www/themes/default',
			'www/themes/local'
		];

		foreach($Files as $File) {
			$Local = "{$Root}/app/{$File}";
			$Remote = "{$CWD}/{$File}";

			static::Message(" * {$File} => {$Remote}");

			if(file_exists($Remote) && !$Force) {
				$Confirm = $this->PromptEquals(
					'   File Exists. Overwrite?',
					'   (y/n):', 'y'
				);

				if(!$Confirm)
				continue;

				if(str_ends_with($File, '.json')) {
					$Confirm = $this->PromptEquals(
						'   This is a config file. Are you sure?',
						'   (y/n):', 'y'
					);

					if(!$Confirm)
					continue;
				}
			}

			Nether\Atlantis\Util::Copy($Local, $Remote);

			if(!file_exists($Remote))
			$this->EndOfLine(1);
		}

		return 0;
	}

}

(new Atlantis)->Run();
